{"ast":null,"code":"var _jsxFileName = \"/home/antoine/Documents/contenuPourAdulte/portfolio/scvi/clientside/src/App.js\";\nimport { React, Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: '',\n      title: '',\n      body: '',\n      data: []\n    };\n\n    this.changeId = e => {\n      let id = e.target.value;\n      this.setState({\n        id: id\n      });\n    };\n\n    this.changeTitle = e => {\n      let title = e.target.value;\n      this.setState({\n        title: title\n      });\n    };\n\n    this.changeBody = e => {\n      let body = e.target.value;\n      this.setState({\n        body: body\n      });\n    };\n\n    this.editPost = (postIndex, title, body) => {\n      this.setState({\n        id: postIndex + 1,\n        title: title,\n        body: body\n      });\n    };\n\n    this.addOrdUpdatePost = e => {\n      e.preventDefault();\n\n      if (this.state.title === '' || this.state.body === '' || this.state.id === '') {\n        alert('No field should be empty');\n        return;\n      } else if (this.state.id > this.state.data.length + 1) {\n        alert('Please use the next id');\n      } else {\n        if (this.state.data[this.state.id - 1] !== undefined) {\n          axios.put(`https://jsonplaceholder.typicode.com/posts/${this.state.id}`, {\n            id: this.state.id,\n            title: this.state.title,\n            body: this.state.body\n          }).then(res => {\n            let updatedData = [...this.state.data];\n            updatedData[this.state.id - 1] = res.data;\n            this.setState({\n              id: updatedData.length + 1,\n              title: '',\n              title: '',\n              body: '',\n              data: updatedData\n            });\n            console.log(res);\n          }).catch(err => console.log(err));\n        } else {\n          //new post \n          axios.post('https://jsonplaceholder.typicode.com/posts', {\n            id: this.state.id + 1,\n            title: this.state.title,\n            body: this.state.body\n          }).then(res => {\n            console.log(res);\n            let newPost = res.data;\n            let newData = [...this.state.data, newPost];\n            this.setState({\n              id: this.state.id + 1,\n              title: '',\n              body: '',\n              data: newData\n            });\n          }).catch(err => console.log(err));\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/posts').then(res => {\n      let newData = res.data.slice(0, 5);\n      this.setState({\n        id: newData[newData.length - 1].id + 1,\n        data: newData\n      }, () => console.log(this.state.id));\n      console.log(newData);\n    }).catch(err => console.log(\"Couldn't fetch data. Error:\" + err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ArticleContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Si \\xE7a vous int\\xE9resse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AddArticle\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"id de l'article: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: this.changeId,\n          value: this.state.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: this.changeTitle,\n            placeholder: \"Title\",\n            value: this.state.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: this.changeBody,\n            placeholder: \"Enter Body\",\n            value: this.state.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            onClick: this.addOrdUpdatePost,\n            value: \"Add/Update Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), this.state.data.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Posts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this) : this.state.data.map((post, index) => /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [index + 1, \". \", post.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [post.body.substr(0, 100), \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.deletePost(index),\n          className: \"delete\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.editPost(index, post.title, post.body),\n          className: \"edit\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/antoine/Documents/contenuPourAdulte/portfolio/scvi/clientside/src/App.js"],"names":["React","Component","axios","App","state","id","title","body","data","changeId","e","target","value","setState","changeTitle","changeBody","editPost","postIndex","addOrdUpdatePost","preventDefault","alert","length","undefined","put","then","res","updatedData","console","log","catch","err","post","newPost","newData","componentDidMount","get","slice","render","map","index","substr","deletePost"],"mappings":"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","sourcesContent":["import { React, Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n  state = {\n    id: '',\n    title: '',\n    body: '',\n    data: []\n  }\n\n  changeId = e => {\n    let id = e.target.value;\n    this.setState({\n      id: id\n    })\n  }\n  \n  changeTitle = e => {\n    let title = e.target.value;\n    this.setState({\n      title: title\n    })\n  }\n\n  changeBody = e => {\n    let body = e.target.value;\n    this.setState({\n      body: body\n    })\n  }\n\n  editPost = (postIndex, title, body) => {\n    this.setState({\n      id: postIndex + 1,\n      title: title,\n      body: body\n    })\n  }\n\n  addOrdUpdatePost = e => {\n    e.preventDefault();\n    if(this.state.title === '' || this.state.body === '' || this.state.id === '') {\n      alert('No field should be empty');\n      return;\n    } else if(this.state.id > this.state.data.length + 1) {\n      alert('Please use the next id')\n    } else {\n      if(this.state.data[this.state.id - 1] !== undefined) {\n        axios.put(`https://jsonplaceholder.typicode.com/posts/${this.state.id}`, {\n          id: this.state.id,\n          title: this.state.title,\n          body: this.state.body\n        }).then(res => {\n          let updatedData = [...this.state.data];\n          updatedData[this.state.id - 1] = res.data;\n          this.setState({\n            id: updatedData.length + 1,\n            title: '',\n            title: '',\n            body: '',\n            data: updatedData\n          })\n          console.log(res)\n        })\n          .catch(err => console.log(err))\n      } else {\n        //new post \n        axios.post('https://jsonplaceholder.typicode.com/posts', {\n          id: this.state.id + 1,\n          title: this.state.title,\n          body: this.state.body\n        })\n          .then(res => {\n            console.log(res);\n            let newPost = res.data;\n            let newData = [...this.state.data, newPost];\n            this.setState({\n              id: this.state.id + 1,\n              title: '',\n              body: '',\n              data: newData\n            });\n          })\n          .catch(err => console.log(err))\n      }\n    }\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/posts')\n      .then(res => {\n        let newData = res.data.slice(0,5);\n        this.setState({\n          id: newData[newData.length - 1].id + 1,\n          data: newData\n        }, () => console.log(this.state.id))\n        console.log(newData)\n      })\n      .catch(err => console.log(\"Couldn't fetch data. Error:\" + err ))\n  }\n\n  render() {\n    return (\n      <div className=\"ArticleContainer\">\n        <h1>Si ça vous intéresse</h1>\n        <div className=\"AddArticle\">\n          <b>id de l'article: </b>\n          <input type=\"number\" onChange={this.changeId} value={this.state.id} />\n          <form>\n            <input type=\"text\" onChange={this.changeTitle} placeholder='Title' value={this.state.title} />\n            <textarea onChange={this.changeBody} placeholder='Enter Body' value={this.state.body}></textarea>\n            <input type=\"submit\" onClick={this.addOrdUpdatePost} value='Add/Update Post'/>\n          </form>\n        </div>\n        {\n          this.state.data.length === 0 ?\n            <p>Loading Posts...</p>\n          :\n            this.state.data.map((post, index) => (\n              <article key={index}>\n                <h2>{index + 1}. {post.title}</h2>\n                <p>{post.body.substr(0, 100)}...</p>\n                <button onClick={() => this.deletePost(index)} className='delete'>Delete</button>\n                <button onClick={() => this.editPost(index, post.title, post.body)} className='edit'>Edit</button>\n              </article>\n            ))\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}