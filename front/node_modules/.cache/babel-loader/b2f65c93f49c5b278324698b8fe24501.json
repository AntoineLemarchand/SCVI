{"ast":null,"code":"var _jsxFileName = \"/home/antoine/Documents/contenuPourAdulte/portfolio/scvi/front/src/components/Post.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Moment from \"moment\";\nimport ReactMarkdown from \"react-markdown\";\nimport CommentBox from \"./Comment.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostStyle = {\n  height: \"80vh\",\n  padding: \"5vh 15vw 5vh 15vw\",\n  overflowY: \"scroll\",\n  color: \"#ebdbb2\"\n};\nconst CommentStyle = {\n  backgroundColor: \"#1d2021\",\n  boxShadow: \"5px 5px 10px black\",\n  padding: \"2vh\",\n  margin: \"2vh 0 2vh 0\",\n  borderRadius: \"15px\"\n};\nexport default class Post extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      api: [],\n      Post: this.props.location.state,\n      comments: true,\n      username: ''\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:9000/comments').then(res => {\n      const api = res.data;\n      this.setState({\n        api\n      });\n    });\n\n    if (localStorage.getItem(\"loggedin\") === true) {\n      this.setState({\n        username: localStorage.getItem(\"username\")\n      });\n    } else {\n      this.setState({\n        username: \"anonyme\"\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Post\",\n      style: PostStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.Post.PTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Par \", this.state.Post.Writer, \" le \", this.state.Post.Date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: this.state.Post.Body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"Comments\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Commentaires\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), this.state.api.map(api => {\n          if (api.PostID === this.state.Post.id) return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"Comment\",\n            style: CommentStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: api.Commenter + \" Le \" + Moment(api.CDate).format('DD/MM/YYYY') + \" à \" + Moment(api.CDate).format('HH:mm')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: api.Cbody\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this);else return this.setState({\n            comments: false\n          });\n        }), this.state.comments ? '' : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Pas de commentaire pour le moment... Ecrivez en un !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(CommentBox, {\n          post: this.state.Post.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/antoine/Documents/contenuPourAdulte/portfolio/scvi/front/src/components/Post.js"],"names":["React","Component","axios","Moment","ReactMarkdown","CommentBox","PostStyle","height","padding","overflowY","color","CommentStyle","backgroundColor","boxShadow","margin","borderRadius","Post","state","api","props","location","comments","username","componentDidMount","get","then","res","data","setState","localStorage","getItem","render","PTitle","Writer","Date","Body","map","PostID","id","Commenter","CDate","format","Cbody"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport Moment from \"moment\";\nimport ReactMarkdown from \"react-markdown\";\nimport CommentBox from \"./Comment.js\";\n\nconst PostStyle = {\n  height: \"80vh\",\n  padding: \"5vh 15vw 5vh 15vw\",\n  overflowY: \"scroll\",\n  color: \"#ebdbb2\"\n}\n\nconst CommentStyle = {\n  backgroundColor: \"#1d2021\",\n  boxShadow: \"5px 5px 10px black\",\n  padding: \"2vh\",\n  margin: \"2vh 0 2vh 0\",\n  borderRadius: \"15px\"\n}\n\nexport default class Post extends Component {\n  state = {\n    api: [],\n    Post: this.props.location.state,\n    comments: true,\n    username: '' \n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:9000/comments')\n      .then(res => {\n        const api = res.data;\n        this.setState({ api })\n      })\n    if (localStorage.getItem(\"loggedin\") === true) {\n      this.setState({username: localStorage.getItem(\"username\")})\n    } else {\n      this.setState({username: \"anonyme\"})\n    }\n  }\n\n  render() {\n    return(\n      <div id=\"Post\" style={PostStyle}>\n        <h1>{this.state.Post.PTitle}</h1>\n        <h2>Par {this.state.Post.Writer} le {this.state.Post.Date}</h2>\n        <ReactMarkdown>{this.state.Post.Body}</ReactMarkdown>\n        <div id=\"Comments\">\n          <h2>Commentaires</h2>\n          {\n            this.state.api.map(api => \n            {\n            if (api.PostID === this.state.Post.id)\n              return (\n                <div id=\"Comment\" style={CommentStyle}>\n                  <p>{ api.Commenter + \" Le \" + Moment(api.CDate).format('DD/MM/YYYY') + \" à \" + Moment(api.CDate).format('HH:mm')}</p>\n                  <p>{api.Cbody}</p>\n                </div>\n              )\n            else\n              return (\n                this.setState({comments: false})\n              );\n            })\n          }\n          {this.state.comments ? '' : <p>Pas de commentaire pour le moment... Ecrivez en un !</p>}\n          <CommentBox post={this.state.Post.id}/>\n        </div>\n      </div>\n    )}\n}\n"]},"metadata":{},"sourceType":"module"}